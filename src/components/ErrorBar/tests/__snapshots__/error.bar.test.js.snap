// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`ErrorBar should render correctly 1`] = `
<Provider
  store={
    Object {
      "clearActions": [Function],
      "dispatch": [Function],
      "getActions": [Function],
      "getState": [Function],
      "replaceReducer": [Function],
      "subscribe": [Function],
    }
  }
>
  <Connect(ErrorBar)>
    <ErrorBar
      dispatch={[Function]}
      error={
        Object {
          "message": "message",
          "success": false,
        }
      }
    >
      <styled.div>
        <StyledComponent
          forwardedComponent={
            Object {
              "$$typeof": Symbol(react.forward_ref),
              "attrs": Array [],
              "componentStyle": ComponentStyle {
                "componentId": "sc-jzJRlG",
                "isStatic": false,
                "lastClassName": "cSdUnJ",
                "rules": Array [
                  "
  text-align: ",
                  [Function],
                  ";
  color: ",
                  [Function],
                  ";
  background-color: ",
                  [Function],
                  ";
  font-family: ",
                  [Function],
                  ";
  font-size: ",
                  [Function],
                  ";
  width: ",
                  [Function],
                  ";
  height: ",
                  [Function],
                  ";
  padding: ",
                  [Function],
                  ";
  padding-left: ",
                  [Function],
                  ";
  margin: ",
                  [Function],
                  ";
  border-radius: ",
                  [Function],
                  ";
  display: ",
                  [Function],
                  ";
  align-items: ",
                  [Function],
                  ";
  justify-content: ",
                  [Function],
                  ";
  flex-wrap: ",
                  [Function],
                  ";
",
                ],
              },
              "displayName": "styled.div",
              "foldedComponentIds": Array [],
              "render": [Function],
              "styledComponentId": "sc-jzJRlG",
              "target": "div",
              "toString": [Function],
              "warnTooManyClasses": [Function],
              "withComponent": [Function],
            }
          }
          forwardedRef={null}
        >
          <div
            className="sc-jzJRlG cSdUnJ"
          >
            <styled.span>
              <StyledComponent
                forwardedComponent={
                  Object {
                    "$$typeof": Symbol(react.forward_ref),
                    "attrs": Array [],
                    "componentStyle": ComponentStyle {
                      "componentId": "sc-cSHVUG",
                      "isStatic": false,
                      "lastClassName": "ipeltD",
                      "rules": Array [
                        "
  color: ",
                        [Function],
                        ";
  font-family: ",
                        [Function],
                        ";
  font-size: ",
                        [Function],
                        ";
  max-width: ",
                        [Function],
                        ";
  overflow: ",
                        [Function],
                        ";
",
                      ],
                    },
                    "displayName": "styled.span",
                    "foldedComponentIds": Array [],
                    "render": [Function],
                    "styledComponentId": "sc-cSHVUG",
                    "target": "span",
                    "toString": [Function],
                    "warnTooManyClasses": [Function],
                    "withComponent": [Function],
                  }
                }
                forwardedRef={null}
              >
                <span
                  className="sc-cSHVUG ipeltD"
                >
                  message
                </span>
              </StyledComponent>
            </styled.span>
            <ForwardRef
              onClick={[Function]}
              style={
                Object {
                  "color": "white",
                  "cursor": "pointer",
                  "fontSize": "30",
                }
              }
            >
              <WithStyles(ForwardRef(SvgIcon))
                onClick={[Function]}
                style={
                  Object {
                    "color": "white",
                    "cursor": "pointer",
                    "fontSize": "30",
                  }
                }
              >
                <ForwardRef(SvgIcon)
                  classes={
                    Object {
                      "colorAction": "MuiSvgIcon-colorAction",
                      "colorDisabled": "MuiSvgIcon-colorDisabled",
                      "colorError": "MuiSvgIcon-colorError",
                      "colorPrimary": "MuiSvgIcon-colorPrimary",
                      "colorSecondary": "MuiSvgIcon-colorSecondary",
                      "fontSizeInherit": "MuiSvgIcon-fontSizeInherit",
                      "fontSizeLarge": "MuiSvgIcon-fontSizeLarge",
                      "fontSizeSmall": "MuiSvgIcon-fontSizeSmall",
                      "root": "MuiSvgIcon-root",
                    }
                  }
                  onClick={[Function]}
                  style={
                    Object {
                      "color": "white",
                      "cursor": "pointer",
                      "fontSize": "30",
                    }
                  }
                >
                  <svg
                    aria-hidden="true"
                    className="MuiSvgIcon-root"
                    focusable="false"
                    onClick={[Function]}
                    role="presentation"
                    style={
                      Object {
                        "color": "white",
                        "cursor": "pointer",
                        "fontSize": "30",
                      }
                    }
                    viewBox="0 0 24 24"
                  >
                    <path
                      d="M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z"
                    />
                    <path
                      d="M0 0h24v24H0z"
                      fill="none"
                    />
                  </svg>
                </ForwardRef(SvgIcon)>
              </WithStyles(ForwardRef(SvgIcon))>
            </ForwardRef>
          </div>
        </StyledComponent>
      </styled.div>
    </ErrorBar>
  </Connect(ErrorBar)>
</Provider>
`;
